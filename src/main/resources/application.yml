spring:
  profiles:
    active: prod
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test?characterEncoding=utf-8&useSSL=false
    username: root
    password: 12345678
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
mybatis-plus:
  mapper-locations: classpath*:/mapper/*.xml
redis:
  pool:
    maxActive: 512
    maxIdle: 100
    maxWait: 100000
    testOnBorrow: true
    testOnReturn: true
  ip: 127.0.0.1
  port: 6379
  expire: 1200
kafka:
  producer:
    bootstrap-servers: 127.0.0.1:9092
    retries: 0 #若设置大于0的值，客户端会将发送失败的记录重新发送
    batch-size: 16384 #当将多个记录被发送到同一个分区时， Producer 将尝试将记录组合到更少的请求中。这有助于提升客户端和服务器端的性能。这个配置控制一个批次的默认大小（以字节为单位）。16384是缺省的配置
    buffer-memory: 33554432 #Producer 用来缓冲等待被发送到服务器的记录的总字节数，33554432是缺省配置
    key-serializer: org.apache.kafka.common.serialization.StringSerializer #关键字的序列化类
    value-serializer: org.apache.kafka.common.serialization.StringSerializer #值的序列化类
  consumer:
    group-id: zoujun
    enable-auto-commit: true
    auto-commit-interval: 100ms
    properties:
      session.timeout.ms: 15000
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    auto-offset-reset: earliest
  listener:
    ack-mode: MANUAL
#logging:
#  pattern:
#    console:  "%d - %msg%n"
##  path: E:/spring-boot/demo/src/main/resources/conf/log/
#  file: E:/spring-boot/demo/src/main/resources/conf/log/sell.log
#  level:
#    com.example.demo.LoggerTest: debug